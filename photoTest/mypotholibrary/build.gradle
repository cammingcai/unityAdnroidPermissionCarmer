apply plugin: 'com.android.library'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //    implementation 'com.android.support:appcompat-v7:28.0.0'
    //    testImplementation 'junit:junit:4.12'
    //    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    //    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation files('libs/classes.jar')
    implementation files('libs/android-support-v4.jar')
}


android.libraryVariants.all { variant ->
    def task = project.tasks.create "jar${variant.buildType.name.capitalize()}",Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    artifacts.add('archives',task)
}

task jarUnityLib(type: Jar, dependsOn: ['build']) {

    archiveName = 'UnityAndroid.jar' //设置打出 jar 包的名字.
    from('build/intermediates/javac/debug/compileReleaseJavaWithJavac/classes')
    destinationDir = file('build/libs')
    exclude('com/aidea/mypotholibrary/BuildConfig.class') //这里是自动设置好删除BuildConfig.class
    exclude('com/aidea/mypotholibrary/BuildConfig\$*.class')
    exclude('**/R.class') //这里是自动设置好删除 R.class 文件
    exclude('**/R\$*.class')
    include('com/aidea/mypotholibrary/photoActivity*.class') //这里是选择要导出的方法接口类

}